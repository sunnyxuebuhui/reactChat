{"ast":null,"code":"import axios from 'axios';\nimport io from 'socket.io-client';\nvar socket = io('ws://localhost:9093'); // 获取聊天列表\n\nvar MSG_LIST = 'MSG_LIST'; // 读取信息\n\nvar MSG_RECV = 'MSG_RECV'; // 标识已读\n\nvar MSG_READ = 'MSG_READ';\nvar initState = {\n  chatmsg: [],\n  users: {},\n  unread: 0\n  /**\n   * 获取聊天信息列表\n   */\n\n};\nexport function getMsgList() {\n  return function (dispatch, getState) {\n    axios.get('/user/getMsgList').then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        var userid = getState().user._id;\n\n        dispatch(msgList(res.data.msgs, res.data.users, userid));\n      }\n    });\n  };\n}\n\nfunction msgList(msgs, users, userid) {\n  return {\n    type: MSG_LIST,\n    payload: {\n      msgs: msgs,\n      users: users,\n      userid: userid\n    }\n  };\n}\n/**\n * 发送聊天信息\n * 实时双向通信\n */\n\n\nexport function sendMsg(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      msg = _ref.msg;\n  return function (dispatch) {\n    socket.emit('sendmsg', {\n      from: from,\n      to: to,\n      msg: msg\n    });\n  };\n}\n/**\n * 接受聊天信息\n * 实时双向通信\n */\n\nexport function recvMsg() {\n  return function (dispatch, getState) {\n    socket.on('recvmsg', function (data) {\n      var userid = getState().user._id;\n\n      dispatch(msgRecv(data, userid));\n    });\n  };\n}\n\nfunction msgRecv(msg, userid) {\n  return {\n    userid: userid,\n    type: MSG_RECV,\n    payload: msg\n  };\n}\n/**\n * 查看聊天信息\n */\n\n\nexport function readMsg(from) {\n  return function (dispatch, getState) {\n    axios.post('/user/readmsg', {\n      from: from\n    }).then(function (res) {\n      var userid = getState().user._id;\n\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(msgRead({\n          userid: userid,\n          from: from,\n          num: res.data.num\n        }));\n      }\n    });\n  };\n}\n\nfunction msgRead(_ref2) {\n  var from = _ref2.from,\n      userid = _ref2.userid,\n      num = _ref2.num;\n  return {\n    type: MSG_READ,\n    payload: {\n      from: from,\n      userid: userid,\n      num: num\n    }\n  };\n}","map":{"version":3,"sources":["/Users/chenyiquan/React/reactChat/src/views/bossInfo/store/reducer.js"],"names":["axios","io","socket","MSG_LIST","MSG_RECV","MSG_READ","initState","chatmsg","users","unread","getMsgList","dispatch","getState","get","then","res","status","data","code","userid","user","_id","msgList","msgs","type","payload","sendMsg","from","to","msg","emit","recvMsg","on","msgRecv","readMsg","post","msgRead","num"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport io from 'socket.io-client'\n\nconst socket = io('ws://localhost:9093')\n\n// 获取聊天列表\nconst MSG_LIST = 'MSG_LIST'\n// 读取信息\nconst MSG_RECV = 'MSG_RECV'\n// 标识已读\nconst MSG_READ = 'MSG_READ'\n\nconst initState = {\n  chatmsg: [],\n  users: {},\n  unread: 0\n}\n\n/**\n * 获取聊天信息列表\n */\nexport function getMsgList() {\n  return (dispatch, getState) => {\n    axios.get('/user/getMsgList')\n      .then(res => {\n        if (res.status === 200 && res.data.code === 0) {\n          const userid = getState().user._id\n          dispatch(msgList(res.data.msgs, res.data.users, userid))\n        }\n      })\n  }\n}\nfunction msgList(msgs, users, userid) {\n  return {\n    type: MSG_LIST,\n    payload: {msgs, users, userid}\n  }\n}\n\n/**\n * 发送聊天信息\n * 实时双向通信\n */\nexport function sendMsg({from, to, msg}) {\n  return (dispatch) => {\n    socket.emit('sendmsg', {from, to, msg})\n  }\n}\n\n/**\n * 接受聊天信息\n * 实时双向通信\n */\nexport function recvMsg() {\n  return (dispatch, getState) => {\n    socket.on('recvmsg', (data) => {\n      const userid = getState().user._id\n      dispatch(msgRecv(data, userid))\n    })\n  }\n}\nfunction msgRecv(msg, userid) {\n  return {\n    userid,\n    type: MSG_RECV,\n    payload: msg\n  }\n}\n\n/**\n * 查看聊天信息\n */\nexport function readMsg(from) {\n  return (dispatch, getState) => {\n    axios.post('/user/readmsg', {from})\n      .then(res => {\n        const userid = getState().user._id\n        if (res.status === 200 && res.data.code === 0) {\n          dispatch(msgRead({userid, from, num: res.data.num}))\n        }\n      })\n  }\n}\nfunction msgRead({from, userid, num}) {\n  return {\n    type: MSG_READ,\n    payload: {from, userid, num}\n  }\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}