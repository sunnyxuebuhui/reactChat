{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _rmcFeedback = require('rmc-feedback');\n\nvar _rmcFeedback2 = _interopRequireDefault(_rmcFeedback);\n\nvar _carousel = require('../carousel');\n\nvar _carousel2 = _interopRequireDefault(_carousel);\n\nvar _flex = require('../flex');\n\nvar _flex2 = _interopRequireDefault(_flex);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* tslint:disable:jsx-no-multiline-js */\n\n\nvar Grid = function (_React$Component) {\n  (0, _inherits3['default'])(Grid, _React$Component);\n\n  function Grid() {\n    (0, _classCallCheck3['default'])(this, Grid);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).apply(this, arguments));\n\n    _this.state = {\n      initialSlideWidth: 0\n    };\n\n    _this.renderCarousel = function (rowsArr, pageCount, rowCount) {\n      var prefixCls = _this.props.prefixCls;\n      var carouselMaxRow = _this.props.carouselMaxRow;\n      var pagesArr = [];\n\n      for (var pageIndex = 0; pageIndex < pageCount; pageIndex++) {\n        var pageRows = [];\n\n        for (var ii = 0; ii < carouselMaxRow; ii++) {\n          var rowIndex = pageIndex * carouselMaxRow + ii;\n\n          if (rowIndex < rowCount) {\n            pageRows.push(rowsArr[rowIndex]);\n          } else {\n            // 空节点为了确保末尾页的最后未到底的行有底线(样式中last-child会没线)\n            pageRows.push(_react2['default'].createElement('div', {\n              key: 'gridline-' + rowIndex\n            }));\n          }\n        }\n\n        pagesArr.push(_react2['default'].createElement('div', {\n          key: 'pageitem-' + pageIndex,\n          className: prefixCls + '-carousel-page'\n        }, pageRows));\n      }\n\n      return pagesArr;\n    };\n\n    _this.renderItem = function (dataItem, index, columnNum, renderItem) {\n      var prefixCls = _this.props.prefixCls;\n      var itemEl = null;\n\n      if (renderItem) {\n        itemEl = renderItem(dataItem, index);\n      } else {\n        if (dataItem) {\n          var icon = dataItem.icon,\n              text = dataItem.text;\n          itemEl = _react2['default'].createElement('div', {\n            className: prefixCls + '-item-inner-content column-num-' + columnNum\n          }, _react2['default'].isValidElement(icon) ? icon : _react2['default'].createElement('img', {\n            className: prefixCls + '-icon',\n            src: icon\n          }), _react2['default'].createElement('div', {\n            className: prefixCls + '-text'\n          }, text));\n        }\n      }\n\n      return _react2['default'].createElement('div', {\n        className: prefixCls + '-item-content'\n      }, itemEl);\n    };\n\n    _this.getRows = function (rowCount, dataLength) {\n      // tslint:disable:prefer-const\n      var _this$props = _this.props,\n          columnNum = _this$props.columnNum,\n          data = _this$props.data,\n          renderItem = _this$props.renderItem,\n          prefixCls = _this$props.prefixCls,\n          _onClick = _this$props.onClick,\n          activeStyle = _this$props.activeStyle,\n          activeClassName = _this$props.activeClassName,\n          itemStyle = _this$props.itemStyle;\n      var rowsArr = [];\n      columnNum = columnNum;\n      var rowWidth = 100 / columnNum + '%';\n      var colStyle = (0, _extends3['default'])({\n        width: rowWidth\n      }, itemStyle);\n\n      for (var i = 0; i < rowCount; i++) {\n        var rowArr = [];\n\n        var _loop = function _loop(j) {\n          var dataIndex = i * columnNum + j;\n          var itemEl = void 0;\n\n          if (dataIndex < dataLength) {\n            var el = data && data[dataIndex];\n            itemEl = _react2['default'].createElement(_rmcFeedback2['default'], {\n              key: 'griditem-' + dataIndex,\n              activeClassName: activeClassName ? activeClassName : prefixCls + '-item-active',\n              activeStyle: activeStyle\n            }, _react2['default'].createElement(_flex2['default'].Item, {\n              className: prefixCls + '-item',\n              onClick: function onClick() {\n                return _onClick && _onClick(el, dataIndex);\n              },\n              style: colStyle\n            }, _this.renderItem(el, dataIndex, columnNum, renderItem)));\n          } else {\n            itemEl = _react2['default'].createElement(_flex2['default'].Item, {\n              key: 'griditem-' + dataIndex,\n              className: prefixCls + '-item ' + prefixCls + '-null-item',\n              style: colStyle\n            });\n          }\n\n          rowArr.push(itemEl);\n        };\n\n        for (var j = 0; j < columnNum; j++) {\n          _loop(j);\n        }\n\n        rowsArr.push(_react2['default'].createElement(_flex2['default'], {\n          justify: 'center',\n          align: 'stretch',\n          key: 'gridline-' + i\n        }, rowArr));\n      }\n\n      return rowsArr;\n    };\n\n    return _this;\n  }\n\n  (0, _createClass3['default'])(Grid, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setState({\n        initialSlideWidth: document.documentElement.clientWidth\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classnames;\n\n      var _a = this.props,\n          prefixCls = _a.prefixCls,\n          className = _a.className,\n          data = _a.data,\n          hasLine = _a.hasLine,\n          isCarousel = _a.isCarousel,\n          square = _a.square,\n          activeStyle = _a.activeStyle,\n          activeClassName = _a.activeClassName,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"data\", \"hasLine\", \"isCarousel\", \"square\", \"activeStyle\", \"activeClassName\"]);\n\n      var columnNum = restProps.columnNum,\n          carouselMaxRow = restProps.carouselMaxRow,\n          onClick = restProps.onClick,\n          renderItem = restProps.renderItem,\n          restPropsForCarousel = __rest(restProps, [\"columnNum\", \"carouselMaxRow\", \"onClick\", \"renderItem\"]);\n\n      var initialSlideWidth = this.state.initialSlideWidth;\n      columnNum = columnNum;\n      carouselMaxRow = carouselMaxRow;\n      var dataLength = data && data.length || 0;\n      var rowCount = Math.ceil(dataLength / columnNum);\n      var rowsArr = void 0;\n      var renderEl = void 0;\n\n      if (isCarousel) {\n        if (initialSlideWidth < 0) {\n          // carousel  server render. because carousel dependes on document\n          return null;\n        }\n\n        if (rowCount % carouselMaxRow !== 0) {\n          rowCount = rowCount + carouselMaxRow - rowCount % carouselMaxRow;\n        }\n\n        var pageCount = Math.ceil(rowCount / carouselMaxRow);\n        rowsArr = this.getRows(rowCount, dataLength);\n        var carouselProps = {};\n\n        if (pageCount <= 1) {\n          carouselProps = {\n            dots: false,\n            dragging: false,\n            swiping: false\n          };\n        }\n\n        renderEl = _react2['default'].createElement(_carousel2['default'], (0, _extends3['default'])({\n          initialSlideWidth: initialSlideWidth\n        }, restPropsForCarousel, carouselProps), this.renderCarousel(rowsArr, pageCount, rowCount));\n      } else {\n        rowsArr = this.getRows(rowCount, dataLength);\n        renderEl = rowsArr;\n      }\n\n      var cls = (0, _classnames3['default'])(prefixCls, className, (_classnames = {}, (0, _defineProperty3['default'])(_classnames, prefixCls + '-square', square), (0, _defineProperty3['default'])(_classnames, prefixCls + '-line', hasLine), (0, _defineProperty3['default'])(_classnames, prefixCls + '-carousel', isCarousel), _classnames));\n      return _react2['default'].createElement('div', {\n        className: cls\n      }, renderEl);\n    }\n  }]);\n  return Grid;\n}(_react2['default'].Component);\n\nexports['default'] = Grid;\nGrid.defaultProps = {\n  data: [],\n  hasLine: true,\n  isCarousel: false,\n  columnNum: 4,\n  carouselMaxRow: 2,\n  prefixCls: 'am-grid',\n  square: true,\n  itemStyle: {}\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}