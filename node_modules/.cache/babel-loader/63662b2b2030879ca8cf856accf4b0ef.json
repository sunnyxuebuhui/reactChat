{"ast":null,"code":"/* eslint-disable func-names */\nimport requestAnimationFrame from 'raf';\n\nvar getTime = Date.now || function () {\n  return new Date().getTime();\n};\n\nvar Ticker = function Ticker() {};\n\nTicker.prototype = {\n  tickFnArray: [],\n  tickKeyObject: {},\n  id: -1,\n  tweenId: 0,\n  frame: 0,\n  perFrame: Math.round(1000 / 60),\n  elapsed: 0,\n  lastUpdate: getTime()\n};\nvar p = Ticker.prototype;\n\np.add = function (fn) {\n  var key = 'TweenOneTicker' + this.tweenId;\n  this.tweenId++;\n  this.wake(key, fn);\n  return key;\n};\n\np.wake = function (key, fn) {\n  var _this = this;\n\n  this.tickKeyObject[key] = fn;\n  this.tickFnArray = Object.keys(this.tickKeyObject).map(function (k) {\n    return _this.tickKeyObject[k];\n  });\n\n  if (this.id === -1) {\n    this.id = requestAnimationFrame(this.tick);\n  }\n};\n\np.clear = function (key) {\n  var _this2 = this;\n\n  delete this.tickKeyObject[key];\n  this.tickFnArray = Object.keys(this.tickKeyObject).map(function (k) {\n    return _this2.tickKeyObject[k];\n  });\n};\n\np.sleep = function () {\n  requestAnimationFrame.cancel(this.id);\n  this.id = -1;\n  this.frame = 0;\n};\n\nvar ticker = new Ticker();\n\np.tick = function (a) {\n  ticker.elapsed = getTime() - ticker.lastUpdate;\n  ticker.lastUpdate += ticker.elapsed;\n\n  if (!ticker.frame) {\n    ticker.frame++;\n  } else {\n    ticker.frame += Math.round(ticker.elapsed / ticker.perFrame);\n  }\n\n  ticker.tickFnArray.forEach(function (func) {\n    return func(a);\n  }); // 如果 object 里没对象了，自动杀掉；\n\n  if (!ticker.tickFnArray.length) {\n    ticker.sleep();\n    return;\n  }\n\n  ticker.id = requestAnimationFrame(ticker.tick);\n};\n\nvar timeoutIdNumber = 0;\n\np.timeout = function (fn, time) {\n  var _this3 = this;\n\n  if (!(typeof fn === 'function')) {\n    return console.warn('not function'); // eslint-disable-line\n  }\n\n  var timeoutID = 'timeout' + Date.now() + '-' + timeoutIdNumber;\n  var startFrame = this.frame;\n  this.wake(timeoutID, function () {\n    var moment = (_this3.frame - startFrame) * _this3.perFrame;\n\n    if (moment >= (time || 0)) {\n      _this3.clear(timeoutID);\n\n      fn();\n    }\n  });\n  timeoutIdNumber++;\n  return timeoutID;\n};\n\nvar intervalIdNumber = 0;\n\np.interval = function (fn, time) {\n  var _this4 = this;\n\n  if (!(typeof fn === 'function')) {\n    console.warn('not function'); // eslint-disable-line\n\n    return null;\n  }\n\n  var intervalID = 'interval' + Date.now() + '-' + intervalIdNumber;\n  var starFrame = this.frame;\n  this.wake(intervalID, function () {\n    var moment = (_this4.frame - starFrame) * _this4.perFrame;\n\n    if (moment >= (time || 0)) {\n      starFrame = _this4.frame;\n      fn();\n    }\n  });\n  intervalIdNumber++;\n  return intervalID;\n};\n\nexport default ticker;","map":null,"metadata":{},"sourceType":"module"}