{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _class = require('../_util/class');\n\nvar _CustomKeyboard = require('./CustomKeyboard');\n\nvar _CustomKeyboard2 = _interopRequireDefault(_CustomKeyboard);\n\nvar _Portal = require('./Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _exenv = require('../_util/exenv');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar instanceArr = [];\nvar customNumberKeyboard = null;\nvar IS_REACT_16 = !!_reactDom2['default'].createPortal;\n\nvar NumberInput = function (_React$Component) {\n  (0, _inherits3['default'])(NumberInput, _React$Component);\n\n  function NumberInput(props) {\n    (0, _classCallCheck3['default'])(this, NumberInput);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (NumberInput.__proto__ || Object.getPrototypeOf(NumberInput)).call(this, props));\n\n    _this.onChange = function (value) {\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value.target.value\n        });\n      }\n\n      _this.props.onChange(value);\n    };\n\n    _this.onConfirm = function (value) {\n      _this.props.onVirtualKeyboardConfirm(value);\n    };\n\n    _this.addBlurListener = function () {\n      document.addEventListener('click', _this.doBlur, false);\n    };\n\n    _this.removeBlurListener = function () {\n      document.removeEventListener('click', _this.doBlur, false);\n    };\n\n    _this.saveRef = function (el) {\n      if (IS_REACT_16 && el) {\n        customNumberKeyboard = el;\n        instanceArr.push({\n          el: el,\n          container: _this.container\n        });\n      }\n    };\n\n    _this.doBlur = function (ev) {\n      var value = _this.state.value;\n\n      if (ev.target !== _this.inputRef) {\n        _this.onInputBlur(value);\n      }\n    };\n\n    _this.removeCurrentExtraKeyboard = function () {\n      instanceArr = instanceArr.filter(function (item) {\n        var el = item.el,\n            container = item.container;\n\n        if (el && container && el !== customNumberKeyboard) {\n          container.parentNode.removeChild(container);\n        }\n\n        return el === customNumberKeyboard;\n      });\n    };\n\n    _this.unLinkInput = function () {\n      if (customNumberKeyboard && customNumberKeyboard.antmKeyboard && customNumberKeyboard.linkedInput && customNumberKeyboard.linkedInput === _this) {\n        customNumberKeyboard.linkedInput = null;\n        (0, _class.addClass)(customNumberKeyboard.antmKeyboard, _this.props.keyboardPrefixCls + '-wrapper-hide');\n      } // for unmount\n\n\n      _this.removeBlurListener();\n\n      if (IS_REACT_16) {\n        _this.removeCurrentExtraKeyboard();\n      }\n    };\n\n    _this.onInputBlur = function (value) {\n      var focus = _this.state.focus;\n\n      if (focus) {\n        _this.setState({\n          focus: false\n        });\n\n        _this.props.onBlur(value);\n\n        setTimeout(function () {\n          _this.unLinkInput();\n        }, 50);\n      }\n    };\n\n    _this.onInputFocus = function () {\n      var value = _this.state.value;\n\n      _this.props.onFocus(value);\n\n      _this.setState({\n        focus: true\n      }, function () {\n        if (customNumberKeyboard) {\n          customNumberKeyboard.linkedInput = _this;\n\n          if (customNumberKeyboard.antmKeyboard) {\n            (0, _class.removeClass)(customNumberKeyboard.antmKeyboard, _this.props.keyboardPrefixCls + '-wrapper-hide');\n          }\n\n          customNumberKeyboard.confirmDisabled = value === '';\n\n          if (customNumberKeyboard.confirmKeyboardItem) {\n            if (value === '') {\n              (0, _class.addClass)(customNumberKeyboard.confirmKeyboardItem, _this.props.keyboardPrefixCls + '-item-disabled');\n            } else {\n              (0, _class.removeClass)(customNumberKeyboard.confirmKeyboardItem, _this.props.keyboardPrefixCls + '-item-disabled');\n            }\n          }\n        }\n      });\n    };\n\n    _this.onKeyboardClick = function (KeyboardItemValue) {\n      var maxLength = _this.props.maxLength;\n      var value = _this.state.value; // tslint:disable-next-line:no-this-assignment\n\n      var onChange = _this.onChange;\n      var valueAfterChange = void 0; // 删除键\n\n      if (KeyboardItemValue === 'delete') {\n        valueAfterChange = value.substring(0, value.length - 1);\n        onChange({\n          target: {\n            value: valueAfterChange\n          }\n        }); // 确认键\n      } else if (KeyboardItemValue === 'confirm') {\n        valueAfterChange = value;\n        onChange({\n          target: {\n            value: valueAfterChange\n          }\n        });\n\n        _this.onInputBlur(value);\n\n        _this.onConfirm(value); // 收起键\n\n      } else if (KeyboardItemValue === 'hide') {\n        valueAfterChange = value;\n\n        _this.onInputBlur(valueAfterChange);\n      } else {\n        if (maxLength !== undefined && +maxLength >= 0 && (value + KeyboardItemValue).length > maxLength) {\n          valueAfterChange = (value + KeyboardItemValue).substr(0, maxLength);\n          onChange({\n            target: {\n              value: valueAfterChange\n            }\n          });\n        } else {\n          valueAfterChange = value + KeyboardItemValue;\n          onChange({\n            target: {\n              value: valueAfterChange\n            }\n          });\n        }\n      }\n\n      if (customNumberKeyboard) {\n        customNumberKeyboard.confirmDisabled = valueAfterChange === '';\n\n        if (customNumberKeyboard.confirmKeyboardItem) {\n          if (valueAfterChange === '') {\n            (0, _class.addClass)(customNumberKeyboard.confirmKeyboardItem, _this.props.keyboardPrefixCls + '-item-disabled');\n          } else {\n            (0, _class.removeClass)(customNumberKeyboard.confirmKeyboardItem, _this.props.keyboardPrefixCls + '-item-disabled');\n          }\n        }\n      }\n    };\n\n    _this.onFakeInputClick = function () {\n      _this.focus();\n    };\n\n    _this.focus = function () {\n      // this focus may invocked by users page button click, so this click may trigger blurEventListener at the same time\n      _this.removeBlurListener();\n\n      var focus = _this.state.focus;\n\n      if (!focus) {\n        _this.onInputFocus();\n      }\n\n      setTimeout(function () {\n        _this.addBlurListener();\n      }, 50);\n    };\n\n    _this.state = {\n      focus: false,\n      value: props.value || ''\n    };\n    return _this;\n  }\n\n  (0, _createClass3['default'])(NumberInput, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('value' in nextProps) {\n        this.setState({\n          value: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.renderCustomKeyboard();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // focus:true unmount 不能触发 blur\n      if (this.state.focus) {\n        this.props.onBlur(this.state.value);\n      }\n\n      this.unLinkInput();\n    }\n  }, {\n    key: 'getComponent',\n    value: function getComponent() {\n      var _props = this.props,\n          confirmLabel = _props.confirmLabel,\n          backspaceLabel = _props.backspaceLabel,\n          cancelKeyboardLabel = _props.cancelKeyboardLabel,\n          keyboardPrefixCls = _props.keyboardPrefixCls,\n          moneyKeyboardWrapProps = _props.moneyKeyboardWrapProps,\n          moneyKeyboardHeader = _props.moneyKeyboardHeader;\n      return _react2['default'].createElement(_CustomKeyboard2['default'], {\n        ref: this.saveRef,\n        onClick: this.onKeyboardClick,\n        prefixCls: keyboardPrefixCls,\n        confirmLabel: confirmLabel,\n        backspaceLabel: backspaceLabel,\n        cancelKeyboardLabel: cancelKeyboardLabel,\n        wrapProps: moneyKeyboardWrapProps,\n        header: moneyKeyboardHeader\n      });\n    }\n  }, {\n    key: 'getContainer',\n    value: function getContainer() {\n      var keyboardPrefixCls = this.props.keyboardPrefixCls;\n\n      if (IS_REACT_16) {\n        if (!this.container) {\n          var container = document.createElement('div');\n          container.setAttribute('id', keyboardPrefixCls + '-container-' + new Date().getTime());\n          document.body.appendChild(container);\n          this.container = container;\n        }\n      } else {\n        var _container = document.querySelector('#' + keyboardPrefixCls + '-container');\n\n        if (!_container) {\n          _container = document.createElement('div');\n\n          _container.setAttribute('id', keyboardPrefixCls + '-container');\n\n          document.body.appendChild(_container);\n        }\n\n        this.container = _container;\n      }\n\n      return this.container;\n    }\n  }, {\n    key: 'renderCustomKeyboard',\n    value: function renderCustomKeyboard() {\n      if (IS_REACT_16) {\n        return;\n      }\n\n      customNumberKeyboard = _reactDom2['default'].unstable_renderSubtreeIntoContainer(this, this.getComponent(), this.getContainer());\n    }\n  }, {\n    key: 'renderPortal',\n    value: function renderPortal() {\n      var _this2 = this;\n\n      if (!IS_REACT_16 || !_exenv.canUseDOM) {\n        return null;\n      }\n\n      return _react2['default'].createElement(_Portal2['default'], {\n        getContainer: function getContainer() {\n          return _this2.getContainer();\n        }\n      }, this.getComponent());\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          placeholder = _props2.placeholder,\n          disabled = _props2.disabled,\n          editable = _props2.editable,\n          moneyKeyboardAlign = _props2.moneyKeyboardAlign;\n      var _state = this.state,\n          focus = _state.focus,\n          value = _state.value;\n      var preventKeyboard = disabled || !editable;\n      var fakeInputCls = (0, _classnames2['default'])('fake-input', {\n        focus: focus,\n        'fake-input-disabled': disabled\n      });\n      var fakeInputContainerCls = (0, _classnames2['default'])('fake-input-container', {\n        'fake-input-container-left': moneyKeyboardAlign === 'left'\n      });\n      return _react2['default'].createElement('div', {\n        className: fakeInputContainerCls\n      }, value === '' && // tslint:disable-next-line:jsx-no-multiline-js\n      _react2['default'].createElement('div', {\n        className: 'fake-input-placeholder'\n      }, placeholder), _react2['default'].createElement('div', {\n        role: 'textbox',\n        'aria-label': value || placeholder,\n        className: fakeInputCls,\n        ref: function ref(el) {\n          return _this3.inputRef = el;\n        },\n        onClick: preventKeyboard ? function () {} : this.onFakeInputClick\n      }, value), this.renderPortal());\n    }\n  }]);\n  return NumberInput;\n}(_react2['default'].Component);\n\nNumberInput.defaultProps = {\n  onChange: function onChange() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onVirtualKeyboardConfirm: function onVirtualKeyboardConfirm() {},\n  placeholder: '',\n  disabled: false,\n  editable: true,\n  prefixCls: 'am-input',\n  keyboardPrefixCls: 'am-number-keyboard'\n};\nexports['default'] = NumberInput;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}