{"ast":null,"code":"import _toConsumableArray from \"/Users/chenyiquan/React/reactChat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/chenyiquan/React/reactChat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport io from 'socket.io-client';\nvar socket = io('ws://localhost:9093'); // 获取聊天列表\n\nvar MSG_LIST = 'MSG_LIST'; // 读取信息\n\nvar MSG_RECV = 'MSG_RECV'; // 标识已读\n\nvar MSG_READ = 'MSG_READ';\nvar initState = {\n  chatmsg: [],\n  users: {},\n  unread: 0\n  /**\n   * 创建reducer\n   */\n\n};\nexport function chat() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MSG_LIST:\n      return _objectSpread({}, state, {\n        users: action.payload.users,\n        chatmsg: action.payload.msgs,\n        unread: action.msgs.filter(function (v) {\n          return !v.read && v.to === action.payload.userid;\n        }).length\n      });\n\n    case MSG_RECV:\n      var n = action.payload.to === action.userid ? 1 : 0;\n      return _objectSpread({}, state, {\n        chatmsg: _toConsumableArray(state.chatmsg).concat([action.payload]),\n        unread: state.unread = n\n      });\n\n    case MSG_READ:\n      var _action$payload = action.payload,\n          from = _action$payload.from,\n          num = _action$payload.num;\n      return _objectSpread({}, state, {\n        chatmsg: state.chatmsg.map(function (v) {\n          return _objectSpread({}, v, {\n            read: from === v.from ? true : v.read\n          });\n        }),\n        unread: state.unread - num\n      });\n\n    default:\n      return state;\n  }\n}\n/**\n * 获取聊天信息列表\n */\n\nexport function getMsgList() {\n  return function (dispatch, getState) {\n    axios.get('/user/getMsgList').then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        var userid = getState().user._id;\n\n        dispatch(msgList(res.data.msgs, res.data.users, userid));\n      }\n    });\n  };\n}\n\nfunction msgList(msgs, users, userid) {\n  return {\n    type: MSG_LIST,\n    payload: {\n      msgs: msgs,\n      users: users,\n      userid: userid\n    }\n  };\n}\n/**\n * 发送聊天信息\n * 实时双向通信\n */\n\n\nexport function sendMsg(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      msg = _ref.msg;\n  return function (dispatch) {\n    socket.emit('sendmsg', {\n      from: from,\n      to: to,\n      msg: msg\n    });\n  };\n}\n/**\n * 接受聊天信息\n * 实时双向通信\n */\n\nexport function recvMsg() {\n  return function (dispatch, getState) {\n    socket.on('recvmsg', function (data) {\n      var userid = getState().user._id;\n\n      dispatch(msgRecv(data, userid));\n    });\n  };\n}\n\nfunction msgRecv(msg, userid) {\n  return {\n    userid: userid,\n    type: MSG_RECV,\n    payload: msg\n  };\n}\n/**\n * 查看聊天信息\n */\n\n\nexport function readMsg(from) {\n  return function (dispatch, getState) {\n    axios.post('/user/readmsg', {\n      from: from\n    }).then(function (res) {\n      var userid = getState().user._id;\n\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(msgRead({\n          userid: userid,\n          from: from,\n          num: res.data.num\n        }));\n      }\n    });\n  };\n}\n\nfunction msgRead(_ref2) {\n  var from = _ref2.from,\n      userid = _ref2.userid,\n      num = _ref2.num;\n  return {\n    type: MSG_READ,\n    payload: {\n      from: from,\n      userid: userid,\n      num: num\n    }\n  };\n}","map":{"version":3,"sources":["/Users/chenyiquan/React/reactChat/src/components/chat/store/reducer.js"],"names":["axios","io","socket","MSG_LIST","MSG_RECV","MSG_READ","initState","chatmsg","users","unread","chat","state","action","type","payload","msgs","filter","v","read","to","userid","length","n","from","num","map","getMsgList","dispatch","getState","get","then","res","status","data","code","user","_id","msgList","sendMsg","msg","emit","recvMsg","on","msgRecv","readMsg","post","msgRead"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport io from 'socket.io-client'\n\nconst socket = io('ws://localhost:9093')\n\n// 获取聊天列表\nconst MSG_LIST = 'MSG_LIST'\n// 读取信息\nconst MSG_RECV = 'MSG_RECV'\n// 标识已读\nconst MSG_READ = 'MSG_READ'\n\nconst initState = {\n  chatmsg: [],\n  users: {},\n  unread: 0\n}\n\n/**\n * 创建reducer\n */\nexport function chat(state=initState, action) {\n  switch (action.type) {\n    case MSG_LIST:\n      return {\n        ...state,\n        users: action.payload.users,\n        chatmsg: action.payload.msgs,\n        unread: action.msgs.filter(v => !v.read && v.to === action.payload.userid).length\n      }\n    case MSG_RECV:\n      const n = action.payload.to === action.userid ? 1 : 0\n      return {\n        ...state,\n        chatmsg: [...state.chatmsg, action.payload],\n        unread: state.unread = n\n      }\n    case MSG_READ:\n      const { from, num } = action.payload\n      return {\n        ...state,\n        chatmsg: state.chatmsg.map(v => ({...v, read: from === v.from ? true : v.read})),\n        unread: state.unread - num\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * 获取聊天信息列表\n */\nexport function getMsgList() {\n  return (dispatch, getState) => {\n    axios.get('/user/getMsgList')\n      .then(res => {\n        if (res.status === 200 && res.data.code === 0) {\n          const userid = getState().user._id\n          dispatch(msgList(res.data.msgs, res.data.users, userid))\n        }\n      })\n  }\n}\nfunction msgList(msgs, users, userid) {\n  return {\n    type: MSG_LIST,\n    payload: {msgs, users, userid}\n  }\n}\n\n/**\n * 发送聊天信息\n * 实时双向通信\n */\nexport function sendMsg({from, to, msg}) {\n  return (dispatch) => {\n    socket.emit('sendmsg', {from, to, msg})\n  }\n}\n\n/**\n * 接受聊天信息\n * 实时双向通信\n */\nexport function recvMsg() {\n  return (dispatch, getState) => {\n    socket.on('recvmsg', (data) => {\n      const userid = getState().user._id\n      dispatch(msgRecv(data, userid))\n    })\n  }\n}\nfunction msgRecv(msg, userid) {\n  return {\n    userid,\n    type: MSG_RECV,\n    payload: msg\n  }\n}\n\n/**\n * 查看聊天信息\n */\nexport function readMsg(from) {\n  return (dispatch, getState) => {\n    axios.post('/user/readmsg', {from})\n      .then(res => {\n        const userid = getState().user._id\n        if (res.status === 200 && res.data.code === 0) {\n          dispatch(msgRead({userid, from, num: res.data.num}))\n        }\n      })\n  }\n}\nfunction msgRead({from, userid, num}) {\n  return {\n    type: MSG_READ,\n    payload: {from, userid, num}\n  }\n}"]},"metadata":{},"sourceType":"module"}