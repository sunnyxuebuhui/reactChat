{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { getPxStyle, getTransformPropValue } from './util';\nexport var TabPane = function (_React$PureComponent) {\n  _inherits(TabPane, _React$PureComponent);\n\n  function TabPane() {\n    _classCallCheck(this, TabPane);\n\n    var _this = _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\n    _this.offsetX = 0;\n    _this.offsetY = 0;\n\n    _this.setLayout = function (div) {\n      _this.layout = div;\n    };\n\n    return _this;\n  }\n\n  _createClass(TabPane, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.active !== nextProps.active) {\n        if (nextProps.active) {\n          this.offsetX = 0;\n          this.offsetY = 0;\n        } else {\n          this.offsetX = this.layout.scrollLeft;\n          this.offsetY = this.layout.scrollTop;\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _a = this.props,\n          active = _a.active,\n          fixX = _a.fixX,\n          fixY = _a.fixY,\n          props = __rest(_a, [\"active\", \"fixX\", \"fixY\"]);\n\n      var style = _extends({}, fixX && this.offsetX ? getTransformPropValue(getPxStyle(-this.offsetX, 'px', false)) : {}, fixY && this.offsetY ? getTransformPropValue(getPxStyle(-this.offsetY, 'px', true)) : {});\n\n      return React.createElement('div', _extends({}, props, {\n        style: style,\n        ref: this.setLayout\n      }), props.children);\n    }\n  }]);\n\n  return TabPane;\n}(React.PureComponent);\nTabPane.defaultProps = {\n  fixX: true,\n  fixY: true\n};","map":null,"metadata":{},"sourceType":"module"}