{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dialog from './Dialog';\n\nfunction noop() {}\n\nvar IS_REACT_16 = !!ReactDOM.createPortal;\nvar CAN_USE_DOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar DialogWrap = function (_React$Component) {\n  _inherits(DialogWrap, _React$Component);\n\n  function DialogWrap() {\n    _classCallCheck(this, DialogWrap);\n\n    var _this = _possibleConstructorReturn(this, (DialogWrap.__proto__ || Object.getPrototypeOf(DialogWrap)).apply(this, arguments));\n\n    _this.saveRef = function (node) {\n      if (IS_REACT_16) {\n        _this._component = node;\n      }\n    };\n\n    _this.getComponent = function (visible) {\n      var props = _extends({}, _this.props);\n\n      ['visible', 'onAnimateLeave'].forEach(function (key) {\n        if (props.hasOwnProperty(key)) {\n          delete props[key];\n        }\n      });\n      return React.createElement(Dialog, _extends({}, props, {\n        visible: visible,\n        onAnimateLeave: _this.removeContainer,\n        ref: _this.saveRef\n      }));\n    };\n\n    _this.removeContainer = function () {\n      if (_this.container) {\n        if (!IS_REACT_16) {\n          ReactDOM.unmountComponentAtNode(_this.container);\n        }\n\n        _this.container.parentNode.removeChild(_this.container);\n\n        _this.container = null;\n      }\n    };\n\n    _this.getContainer = function () {\n      if (!_this.container) {\n        var container = document.createElement('div');\n        var containerId = _this.props.prefixCls + '-container-' + new Date().getTime();\n        container.setAttribute('id', containerId);\n        document.body.appendChild(container);\n        _this.container = container;\n      }\n\n      return _this.container;\n    };\n\n    return _this;\n  }\n\n  _createClass(DialogWrap, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.visible) {\n        this.componentDidUpdate();\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(_ref) {\n      var visible = _ref.visible;\n      return !!(this.props.visible || visible);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.visible) {\n        if (!IS_REACT_16) {\n          this.renderDialog(false);\n        } else {\n          // TODO for react@16 createPortal animation\n          this.removeContainer();\n        }\n      } else {\n        this.removeContainer();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (!IS_REACT_16) {\n        this.renderDialog(this.props.visible);\n      }\n    }\n  }, {\n    key: 'renderDialog',\n    value: function renderDialog(visible) {\n      ReactDOM.unstable_renderSubtreeIntoContainer(this, this.getComponent(visible), this.getContainer());\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!CAN_USE_DOM) {\n        return null;\n      }\n\n      var visible = this.props.visible;\n\n      if (IS_REACT_16 && (visible || this._component)) {\n        return ReactDOM.createPortal(this.getComponent(visible), this.getContainer());\n      }\n\n      return null;\n    }\n  }]);\n\n  return DialogWrap;\n}(React.Component);\n\nexport default DialogWrap;\nDialogWrap.defaultProps = {\n  visible: false,\n  prefixCls: 'rmc-dialog',\n  onClose: noop\n};","map":null,"metadata":{},"sourceType":"module"}